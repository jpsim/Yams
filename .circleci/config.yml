version: 2.1

commands:
  bundle_install:
    steps:
      - run: echo "ruby-2.3" > ~/.ruby-version
      - restore_cache:
          key: &GEM_CACHE_KEY 1-gems-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Gemfile.lock" }}
      - run: bundle check --path vendor/bundle || bundle install --path vendor/bundle
      - save_cache:
          key: *GEM_CACHE_KEY
          paths:
            - vendor/bundle

  pod_lib_lint:
    steps:
      - bundle_install
      - run: bundle exec pod lib lint

  swiftlint:
    steps:
      - run: mkdir -p build/reports/
      - run: swiftlint lint --reporter junit > build/reports/junit.xml
      - store_test_results:
          path: build/reports/

jobs:
  xcode:
    parameters:
      xcode:
        type: string
      additional_xcode_flags:
        default: ""
        type: string
    macos:
      xcode: << parameters.xcode >>
    shell: /bin/bash --login -eo pipefail
    environment:
      XCODE_FLAGS: -scheme Yams << parameters.additional_xcode_flags >>
    steps:
      - checkout
      - run: |
          ( xcodebuild ${XCODE_FLAGS} test # -sdk macosx -destination arch=x86_64
            xcodebuild ${XCODE_FLAGS} test OTHER_SWIFT_FLAGS=-DUSE_UTF8
            xcodebuild ${XCODE_FLAGS} test -sdk iphonesimulator -destination "name=iPhone 8"
            xcodebuild ${XCODE_FLAGS} test -sdk appletvsimulator -destination "name=Apple TV 4K"
            xcodebuild ${XCODE_FLAGS} build -sdk watchsimulator -destination "name=Apple Watch Series 3 - 38mm"
          ) | xcpretty -r junit
      - store_test_results:
          path: build/reports/

  jazzy:
    docker:
      - image: norionomura/jazzy:0.9.3_swift-4.1.3
    steps:
      - checkout
      - bundle_install
      - run: swift build
      - run: sourcekitten doc --spm-module Yams>yams.json
      - run: bundle exec jazzy --clean --sourcekitten-sourcefile yams.json
      - store_artifacts:
          path: docs
      - run: |
          if ruby -rjson -e "j = JSON.parse(File.read('docs/undocumented.json')); exit j['warnings'].length != 0"; then
            echo "Undocumented declarations:"
            cat "$undocumented"
            exit 1
          fi
      - run: |
          if [ $CIRCLE_BRANCH == master ]; then
            git config --global user.email "$GH_EMAIL"
            git config --global user.name "$GH_NAME"

            git clone $CIRCLE_REPOSITORY_URL out

            cd out
            git checkout gh-pages
            git rm -rf .
            cd ..

            cp -a docs/. out/.
            cd out

            git add -A
            git commit -m "Automated deployment to GitHub Pages: ${CIRCLE_SHA1}" --allow-empty

            git push origin gh-pages
          fi

  swiftpm:
    parameters:
      xcode:
        type: string
      swiftpm_flags:
        default: ""
        type: string
    macos:
      xcode: << parameters.xcode >>
    steps: &steps-for-swiftpm
      - checkout
      - run: swift test << parameters.swiftpm_flags >>
      - run: swift test -Xswiftc -DUSE_UTF8 << parameters.swiftpm_flags >>

  linux_on_docker:
    parameters:
      image:
        type: string
      swiftpm_flags:
        default: ""
        type: string
    docker:
      - image: << parameters.image >>
    steps: *steps-for-swiftpm

workflows:
  version: 2
  workflow:
    jobs:
      - xcode:
          name: xcode_9.2_swift_4.0.3
          xcode: "9.2.0"
          post-steps: [pod_lib_lint]
      - xcode:
          name: xcode_9.4_swift_4.1.2
          xcode: "9.4.1"
          post-steps: [pod_lib_lint]
      - xcode:
          name: xcode_10.1_swift_4.2.1
          xcode: "10.1.0"
          additional_xcode_flags: -parallel-testing-enabled NO
      - jazzy
      - swiftpm:
          name: spm_swift_4.0.3
          xcode: "9.2.0"
      - swiftpm:
          name: spm_swift_4.1.2
          xcode: "9.4.1"
      - swiftpm:
          name: spm_swift_4.2.1
          xcode: "10.1.0"
      - linux_on_docker:
          name: linux_swift_4.0.3
          image: norionomura/swiftlint:swift-4.0.3
          post-steps: [swiftlint]
      - linux_on_docker:
          name: linux_swift_4.1.3
          image: norionomura/swiftlint:swift-4.1.3
          post-steps: [swiftlint]
      - linux_on_docker:
          name: linux_swift_4.2.1
          image: norionomura/swiftlint:swift-4.2.1
          post-steps: [swiftlint]
      - linux_on_docker:
          name: linux_swift_5.0
          swiftpm_flags: -Xswiftc -swift-version -Xswiftc 5
          image: norionomura/swift:swift-5.0-branch

  daily:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - linux_on_docker:
          name: linux_swift_5.0
          swiftpm_flags: -Xswiftc -swift-version -Xswiftc 5
          image: norionomura/swift:swift-5.0-branch
