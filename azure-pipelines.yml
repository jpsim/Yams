resources:
  containers:
  - container: '4.0.2'
    image: norionomura/swiftlint:swift-4.0.2
  - container: '4.0.3'
    image: norionomura/swiftlint:swift-4.0.3
  - container: '4.1.0'
    image: norionomura/swiftlint:swift-4.1.0
  - container: '4.1.1'
    image: norionomura/swiftlint:swift-4.1.1
  - container: '4.1.2'
    image: norionomura/swiftlint:swift-4.1.2
  - container: '4.1.3'
    image: norionomura/swiftlint:swift-4.1.3
  - container: '4.2.0'
    image: norionomura/swiftlint:swift-4.2.0
  - container: '4.2.1'
    image: norionomura/swiftlint:swift-4.2.1

jobs:
- job: linux
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    maxParallel: 10
    matrix:
      swift402:
        containerResource: '4.0.2'
      swift403:
        containerResource: '4.0.3'
      swift410:
        containerResource: '4.1.0'
      swift411:
        containerResource: '4.1.1'
      swift412:
        containerResource: '4.1.2'
      swift413:
        containerResource: '4.1.3'
      swift420:
        containerResource: '4.2.0'
      swift421:
        containerResource: '4.2.1'
  container: $[ variables['containerResource'] ]
  steps:
    - script: swift test --parallel
      displayName: swift test
    - script: swift test --parallel -Xswiftc -DUSE_UTF8
      displayName: swift test with UTF8
    - script: |
        set -o pipefail
        mkdir -p build/reports/
        swiftlint lint --reporter junit > build/reports/swiftlint.xml
      displayName: swiftlint
    - task: PublishTestResults@2
      inputs:
        testRunner: JUnit
        testResultsFiles: build/reports/**

- job: macOS
  pool:
    vmImage: 'macOS 10.13'
  strategy:
    maxParallel: 10
    matrix:
      xcode901:
        XCODE_APP: 'Xcode_9.0.1'
      xcode91:
        XCODE_APP: 'Xcode_9.1'
      xcode92:
        XCODE_APP: 'Xcode_9.2'
      xcode931:
        XCODE_APP: 'Xcode_9.3.1'
      xcode941:
        XCODE_APP: 'Xcode_9.4.1'
        POD_LIB_LINT: 'true'
      xcode10:
        XCODE_APP: 'Xcode_10'
        XCODE_FLAGS_FOR_TEST: -parallel-testing-enabled NO
      xcode101:
        XCODE_APP: 'Xcode_10.1'
        XCODE_FLAGS_FOR_TEST: -parallel-testing-enabled NO
  steps:
    - script: |
        sudo xcode-select -s /Applications/$XCODE_APP.app
        echo "##vso[task.setvariable variable=XCODE_FLAGS]-scheme Yams $XCODE_FLAGS_FOR_TEST"
      displayName: xcode-select & set XCODE_FLAGS
    - script: >
        set -o pipefail &&
        xcodebuild $XCODE_FLAGS test |
        xcpretty -r junit -o build/reports/xcodebuild-macos.xml
      displayName: tests on macOS
      condition: succeededOrFailed()
    - script: >
        set -o pipefail &&
        xcodebuild $XCODE_FLAGS test OTHER_SWIFT_FLAGS=-DUSE_UTF8 |
        xcpretty -r junit -o build/reports/xcodebuild-macos-utf8.xml
      displayName: tests on macOS with UTF8
      condition: succeededOrFailed()
    - script: >
        set -o pipefail &&
        xcodebuild $XCODE_FLAGS test -sdk iphonesimulator -destination "name=iPhone 8" |
        xcpretty -r junit -o build/reports/xcodebuild-iOS.xml
      displayName: tests on iOS
      condition: succeededOrFailed()
    - script: >
        set -o pipefail &&
        xcodebuild $XCODE_FLAGS test -sdk appletvsimulator -destination "name=Apple TV 4K" |
        xcpretty -r junit -o build/reports/xcodebuild-tvOS.xml
      displayName: tests on tvOS
      condition: succeededOrFailed()
    - script: >
        set -o pipefail &&
        xcodebuild $XCODE_FLAGS build -sdk watchsimulator -destination "name=Apple Watch Series 3 - 38mm" |
        xcpretty -r junit -o build/reports/xcodebuild-watchOS.xml
      displayName: build on watchOS
      condition: succeededOrFailed()
    - script: >
        set -o pipefail &&
        swift test --parallel 2>&1 |
        xcpretty -r junit -o build/reports/swift-test.xml
      displayName: swift test
      condition: succeededOrFailed()
    - script: pod lib lint
      displayName: pod lib lint
      condition: eq(variables['POD_LIB_LINT'], 'true')
    - task: PublishTestResults@2
      inputs:
        testRunner: JUnit
        testResultsFiles: build/reports/**
      condition: succeededOrFailed()
