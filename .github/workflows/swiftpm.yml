name: SwiftPM

on:
  push:
    branches: [main]
    paths:
      - '.codecov.yml'
      - '.github/workflows/swiftpm.yml'
      - 'Package*'
      - 'Sources/**/*.[ch]'
      - 'Sources/**/*.swift'
      - 'Sources/**/module.modulemap'
      - 'Tests/**/*.swift'
      - 'Tests/**/*.ya?ml'
  pull_request:
    paths:
      - '.codecov.yml'
      - '.github/workflows/swiftpm.yml'
      - 'Package*'
      - 'Sources/**/*.[ch]'
      - 'Sources/**/*.swift'
      - 'Sources/**/module.modulemap'
      - 'Tests/**/*.swift'
      - 'Tests/**/*.ya?ml'

jobs:
  Xcode:
    strategy:
      matrix:
        xcode_version: ['12.5.1', '13.0', '13.1', '13.2.1']
    runs-on: macos-11
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode_version }}.app
    steps:
      - uses: actions/checkout@v2
      - run: swift -version
      - run: YAMS_DEFAULT_ENCODING=UTF16 swift test --parallel
      - run: YAMS_DEFAULT_ENCODING=UTF8 swift test --parallel
      - name: Code Coverage
        if: matrix.xcode_version == '13.2.1'
        run: |
          swift test --enable-code-coverage
          xcrun llvm-cov export -format="lcov" .build/debug/YamsPackageTests.xctest/Contents/MacOS/YamsPackageTests -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
          if [[ -n "${CODECOV_TOKEN}" ]]; then
            bash <(curl -s https://codecov.io/bash) -f coverage.lcov
          fi
        env: { 'CODECOV_TOKEN': '${{ secrets.CODECOV_TOKEN }}' }

  Xcode_Monterey:
    strategy:
      matrix:
        xcode_version: ['13.3.1', '13.4']
    runs-on: macos-12
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode_version }}.app
    steps:
      - uses: actions/checkout@v2
      - run: swift -version
      - run: YAMS_DEFAULT_ENCODING=UTF16 swift test --parallel
      - run: YAMS_DEFAULT_ENCODING=UTF8 swift test --parallel

  Linux:
    strategy:
      matrix:
        tag: ['5.4', '5.5', '5.6']
    runs-on: ubuntu-latest
    container:
      image: swift:${{ matrix.tag }}
    steps:
      - uses: actions/checkout@v2
      - run: YAMS_DEFAULT_ENCODING=UTF16 swift test --parallel
      - run: YAMS_DEFAULT_ENCODING=UTF8 swift test --parallel

  Windows:
    runs-on: windows-latest

    strategy:
      matrix:
        include:
          - branch: swift-5.4.3-release
            tag: 5.4.3-RELEASE

          - branch: swift-5.5.1-release
            tag: 5.5.1-RELEASE

          - branch: development
            tag: DEVELOPMENT-SNAPSHOT-2021-11-20-a

    steps:
      - uses: actions/checkout@v2
      - uses: compnerd/gha-setup-swift@main
        with:
          branch: ${{ matrix.branch }}
          tag: ${{ matrix.tag }}
      # Commands to run once connected via SSH:
      #
      # >d:
      # >cd a\Yams\Yams
      # >setx SDKROOT C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk
      # >setx DEVELOPER_DIR C:\Library\Developer
      # >swift build -v
      # >swift test -v
      # >swift test -v --filter testBinary
      # - name: Start SSH session
      #   uses: luchihoratiu/debug-via-ssh@main
      #   with:
      #     NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      #     SSH_PASS: ${{ secrets.SSH_PASS }}
      - name: Build
        run: swift build -v
      - name: Test
        run: swift test -v
